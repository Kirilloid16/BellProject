-- Table: public.Organization

-- DROP TABLE IF EXISTS public."Organization";

CREATE TABLE IF NOT EXISTS public."Organization"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character(30) COLLATE pg_catalog."default",
    fullname character(30) COLLATE pg_catalog."default",
    inn character(12) COLLATE pg_catalog."default",
    kpp character(9) COLLATE pg_catalog."default",
    address character(40) COLLATE pg_catalog."default",
    phone character(12) COLLATE pg_catalog."default",
    "isActive" character(12) COLLATE pg_catalog."default",
    CONSTRAINT "Organization_pkey" PRIMARY KEY (id)
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Organization"
    OWNER to postgres;

-- Table: public.Office

-- DROP TABLE IF EXISTS public."Office";

CREATE TABLE IF NOT EXISTS public."Office"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "orgId" integer,
    name character(30) COLLATE pg_catalog."default",
    address character(30) COLLATE pg_catalog."default",
    "isActive" character(30) COLLATE pg_catalog."default",
    CONSTRAINT "Office_pkey" PRIMARY KEY (id),
    CONSTRAINT "orgId" FOREIGN KEY ("orgId")
        REFERENCES public."Organization" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Office"
    OWNER to postgres;

-- Table: public.documentType

-- DROP TABLE IF EXISTS public."documentType";

CREATE TABLE IF NOT EXISTS public."documentType"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "docName" character(30) COLLATE pg_catalog."default",
    "docCode" character(30) COLLATE pg_catalog."default",
    CONSTRAINT "documentType_pkey" PRIMARY KEY (id)
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."documentType"
    OWNER to postgres;

-- Table: public.country

-- DROP TABLE IF EXISTS public.country;

CREATE TABLE IF NOT EXISTS public.country
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    code character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT country_pkey PRIMARY KEY (id)
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.country
    OWNER to postgres;

-- Table: public.User

-- DROP TABLE IF EXISTS public."User";

CREATE TABLE IF NOT EXISTS public."User"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "OffId" bigint,
    "firstName" character(30) COLLATE pg_catalog."default",
    "lastName" character(30) COLLATE pg_catalog."default",
    "middleName" character(30) COLLATE pg_catalog."default",
    "position" character(30) COLLATE pg_catalog."default",
    phone character(30) COLLATE pg_catalog."default",
    "docId" integer,
    "countryId" integer,
    CONSTRAINT "User_pkey" PRIMARY KEY (id),
    CONSTRAINT "OffId" FOREIGN KEY ("OffId")
        REFERENCES public."Office" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."User"
    OWNER to postgres;

-- Table: public.userDocument

-- DROP TABLE IF EXISTS public."userDocument";

CREATE TABLE IF NOT EXISTS public."userDocument"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "docTypeId" integer,
    "docNumber" character(30) COLLATE pg_catalog."default",
    "docDate" character(30) COLLATE pg_catalog."default",
    "userId" bigint NOT NULL,
    CONSTRAINT "userDocument_pkey" PRIMARY KEY (id),
    CONSTRAINT "userId" FOREIGN KEY ("userId")
        REFERENCES public."User" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION

)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."userDocument"
    OWNER to postgres;


